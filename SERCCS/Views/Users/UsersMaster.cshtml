@model SERCCS.Models.Views.UsersViewModel
@{
    ViewData["Title"] = "UsersMaster";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .heading {
        /*  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;*/
        color: #083669;
        font-size: 30px;
        text-align: center;
    }

    body {
        font-family: "Roboto", sans-serif;
    }

    .size {
        height: 30px;
        width: 180px;
    }

    .sizebig {
        height: 30px;
        width: 300px;
    }

    .divbox {
        background-color: #eaeef3;
        color: #474E93;
        border: 2px solid #474E93;
        border-radius: 20px;
        font-weight: bold
    }

    .tab {
        font-family: Arial, Helvetica, sans-serif;
        font-size: 12px;
        border-collapse: collapse;
        width: 950px;
        margin-left: auto;
        margin-right: auto;
        font-weight: bold
    }

        .tab tbody {
            display: block;
            width: 950px;
            overflow: auto;
            height: 250px;
            text-align: center;
            color: #133E87;
        }

        .tab td, .tab th {
            border: 1px solid #004085;
            border-collapse: collapse;
            width: 950px;
        }

        .tab td {
            padding: 5px;
        }

        .tab tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .tab tr:nth-child(odd) {
            background-color: white;
        }

        .tab tr:hover {
            background-color: #E1F7F5;
        }

        .tab th {
            padding: 5px;
            text-align: center;
            background-color: #0c2253;
            font-size: 13px;
            color: white;
            position: sticky;
            top: 0;
            border: 1px solid #ddd;
            /* border-radius: 5px*/
        }
</style>

<form asp-controller="Users" asp-action="UsersMaster" method="post">
    <div class="heading mt-4">
        User Master
    </div>
    <div class="container mt-1" cellpadding="0" cellspacing="0" border="1">
        <div class="row mt-3 justify-content-md-center">
            <div class="col-md-12 col-lg-12 col-12 pl-5 divbox">
                <div class="row mt-3">
                    <div class="col-md-3 col-sm-12 col-12">
                        Allocated Branch:
                    </div>
                    <div class="col-md-9 col-sm-12 col-12">
                        @Html.DropDownListFor(p => p.allocated_branch_id, new SelectList(Model.brmst, "Value", "Text"), "Select Branch", new { @class = "sizebig" })
                    </div>
                    <div class="col-md-3 col-sm-12 col-12 mt-2">
                        UserId:
                    </div>
                    <div class="col-md-9 col-sm-12 col-12 mt-2">
                        @Html.TextBoxFor(p => p.user_id, new { @class = "size", @maxlength = "50", onkeypress = "javascript:return evt_user_id(event);" })
                    </div>
                    <div class="col-md-3 col-sm-12 col-12 mt-2">
                        UserName:
                    </div>
                    <div class="col-md-9 col-sm-12 col-12 mt-2">
                        @Html.TextBoxFor(p => p.user_name, new { @class = "sizebig", @maxlength = "60" })
                    </div>
                    <div class="col-md-3 col-sm-12 col-12 mt-2">
                        Password:
                    </div>
                    <div class="col-md-9 col-sm-12 col-12 mt-2">
                        @Html.TextBoxFor(p => p.user_password, new { @class = "size", @maxlength = "30" })
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-md-3 col-sm-12 col-12">
                        Emailid:
                    </div>
                    <div class="col-md-9 col-sm-12 col-12">
                        @Html.TextBoxFor(p => p.email_id, new { @class = "sizebig", @maxlength = "100" })
                    </div>
                    <div class="col-md-3 col-sm-12 col-12 mt-2">
                        Role:
                    </div>
                    <div class="col-md-6 col-sm-12 col-12 mt-2">
                        @Html.DropDownListFor(p => p.user_role, new SelectList(new string[] { "SUPER-ADMIN", "BANK-ADMIN", "ADMIN", "CASHIER", "LOAN-DEPT", "ACCOUNTANT" }), new { @class = "size" })
                    </div>
                    <div class="col-md-3 col-sm-12 col-12 mt-2">
                        @Html.CheckBoxFor(P => P.blocked) Blocked
                    </div>
                </div>

                
                <div class="row mt-2 mb-2 justify-content-lg-center">

                    <div class="col-lg-12 col-md-12 col-sm-12 col-12 text-center">
                        <button id="btnsave" type="button" name="btnsave" Height="40" Width="100" class="btn btn-sm" value="SAVE" onclick="SaveData()">
                            Save | <i class="fa fa-check"></i>
                        </button>
                    </div>
                    <div class="col-lg-2 col-md-2 col-sm-12 col-12 text-center">
                        <button id="btnupdate" type="button" name="btnupdate" Height="40" Width="100" class="btn btn-sm" value="UPDATE" onclick="UpdateData()">
                            Update | <i class="fa fa-edit"></i>
                        </button>
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-12 col-12 text-center">
                        <button id="btnaddnew" type="button" name="btnaddnew" Height="40" Width="100" class="btn btn-sm" value="ADD NEW" onclick="AddNew()">
                            Add New | <i class="fa fa-plus"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container mb-1 mt-1" align="center">
        <div class="table-responsive mt-1">
            <table id="UsersList" class="tab">
            </table>
        </div>
    </div>
</form>

@section scripts
{
    <script src="~/js/jquery-3.6.1.js"></script>
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            $('#btnupdate').hide();
            $('#btnaddnew').hide();
            ShowTable();
        });

        function SaveData() {
            if ($('#allocated_branch_id').val() == null || $('#allocated_branch_id').val() == "" || $('#allocated_branch_id').val() == "Select Branch") {
                alert("Allocate Branch Cannot Be Blanked");
                $('#allocated_branch_id').focus();
            }
            else if ($('#user_id').val() == null || $('#user_id').val() == "") {
                alert("User Id Cannot be Blank");
                $('#user_id').focus();
            }
            else if ($('#user_name').val() == null || $('#user_name').val() == "") {
                alert("User Name Cannot be Blank");
                $('#user_name').focus();
            }
            else if ($('#user_password').val() == null || $('#user_password').val() == "") {
                alert("Password Cannot be Blank");
                $('#user_password').focus();
            }
            else {
                    let ModelObject = {
                        allocated_branch_id: $('#allocated_branch_id').val(),
                        user_id: $('#user_id').val(),
                        user_name: $('#user_name').val(),
                        user_password: $('#user_password').val(),
                        email_id: $('#email_id').val(),
                        user_role: $('#user_role').val()
                    };
                    /*alert(JSON.stringify(ModelObject));*/
                    $.ajax({
                        url: '@Url.Action("SaveUserMaster", "Users")',
                        type: "POST",
                        data: ModelObject,
                        dataType: "json",
                        success: function (data) {
                            alert(data);
                            if (data == "Saved Successfully") {
                                ClearAll();
                            }
                            else {
                                alert(data);
                            }
                            ShowTable();
                        },
                        error: function (err) {
                            alert("Error Occured");
                        }
                    });
                 }
        }

        function ShowTable() {
            /*let ModelObject = { caste_id: $('#caste_id').val()};*/
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetAllUsersDetails", "Users")',
                //data: ModelObject,
                dataType: "json",
                success: function (data) {
                    document.getElementById("UsersList").innerHTML = data;
                },
                error: function (err) {
                    //alert("Error Occured");
                }
            });
        }

        (function () {
            if (window.addEventListener) {
                window.addEventListener('load', run, false);
            }
            else if (window.attachEvent) {
                window.attachEvent('onload', run);
            }

            function run() {
                var t = document.getElementById('UsersList');
                t.onclick = function (event) {
                    event = event || window.event;
                    var target = event.target || event.srcElement;
                    while (target && target.nodeName != 'TR') {
                        target = target.parentElement;
                    }

                    var cells = target.cells;
                    if (!cells.length || target.parentNode.nodeName == 'THEAD') {
                        return;
                    }
                    var f1 = document.getElementById('allocated_branch_id');
                    var f2 = document.getElementById('user_role');
                    var f3 = document.getElementById('user_id');
                    var f4 = document.getElementById('user_name');
                    var f5 = document.getElementById('user_password');
                    var f6 = document.getElementById('email_id');

                    f1.value = cells[1].innerHTML;
                    f2.value = cells[2].innerHTML;
                    f3.value = cells[3].innerHTML;
                    f4.value = cells[4].innerHTML;
                    f5.value = cells[5].innerHTML;
                    f6.value = cells[6].innerHTML;
                    if (cells[7].innerHTML == "YES") {
                        $("#blocked").prop('checked', true);
                    }
                    else {
                        $("#blocked").prop('checked', false);
                    }
                    $('#btnupdate').show();
                    $('#btnaddnew').show();
                    $('#btnsave').hide();
                    document.getElementById('user_id').readOnly = true;
                };
            }
        })();

        function UpdateData() {
            if ($('#allocated_branch_id').val() == null || $('#allocated_branch_id').val() == "" || $('#allocated_branch_id').val() == "Select Branch") {
                alert("Allocate Branch Cannot Be Blanked");
                $('#allocated_branch_id').focus();
            }
            else if ($('#user_name').val() == null || $('#user_name').val() == "") {
                alert("User Name Cannot be Blank");
                $('#user_name').focus();
            }
            else if ($('#user_password').val() == null || $('#user_password').val() == "") {
                alert("Password Cannot be Blank");
                $('#user_password').focus();
            }
            else {
                    let ModelObject = {
                        allocated_branch_id: $('#allocated_branch_id').val(),
                        user_id: $('#user_id').val(),
                        user_name: $('#user_name').val(),
                        user_password: $('#user_password').val(),
                        email_id: $('#email_id').val(),
                        user_role: $('#user_role').val(),
                        blocked: document.getElementById('blocked').checked,
                    };
                    $.ajax({
                        url: '@Url.Action("UpdateUserMaster", "Users")', // Controller method URL
                        type: "POST",
                        data: ModelObject, // Send ModelObject as data
                        dataType: "json", // Expecting JSON response
                        success: function (data) {
                            alert(data);
                            ShowTable();                            
                            AddNew();
                        },
                        error: function (err) {
                            alert("Error Occurred: " + JSON.stringify(err));
                        }
                    });
                 }
        }

        function evt_user_id(evt) {
            var charCode = (evt.which) ? evt.which : event.keyCode;
            if ((charCode < 106 || charCode > 95) && (charCode < 58 || charCode > 47) && charCode != 13 && charCode == 191 && charCode == 111 && (charCode < 65 || charCode > 90))
                return false;
            else if (charCode == 13) {               
                getdetailsbyuserid();                          
            }
        }

          function getdetailsbyuserid() {
              let ModelObject = { user_id: $('#user_id').val()};
                /*alert(JSON.stringify(ModelObject));*/
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetUserDetailsByUserId", "Users")',
                    data: ModelObject,
                    dataType: "json",
                    success: function (data) {
                        if (data.msg != "No Data Found") {
                            $('#allocated_branch_id').val(data.allocated_branch_id);
                            $('#user_id').val(data.user_id);
                            $('#user_name').val(data.user_name);
                            $('#user_password').val(data.user_password);
                            $('#email_id').val(data.email_id);
                            $('#user_role').val(data.user_role);
                            if (data.blocked == true) {
                                $("#blocked").prop('checked', true);
                            } else {
                                $("#blocked").prop('checked', false);
                            }
                            document.getElementById('user_id').readOnly = true;
                            $('#btnupdate').show();
                            $('#btnsave').hide();
                            $('#btnaddnew').show();
                        }
                        else {
                            alert("Invalid UserId!!");
                            document.getElementById('user_id').readOnly = false;
                            $('#btnupdate').hide();
                            $('#btnsave').show();
                            $('#btnaddnew').hide();
                        }

                    },
                    error: function (err) {
                        alert("Unable To Calculate");
                    }
                });
          }

        function ClearAll() {            
            $('#user_id').val("");
            $('#user_name').val("");
            $('#user_password').val("");
            $('#email_id').val("");
            $('#user_role').val("SUPER-ADMIN");
            $("#blocked").prop('checked', false);
        }

        function AddNew() {
            $('#btnupdate').hide();
            $('#btnsave').show();
            $('#btnaddnew').hide();
            document.getElementById('user_id').readOnly = false;           
            ClearAll();
        }

    </script>
}
